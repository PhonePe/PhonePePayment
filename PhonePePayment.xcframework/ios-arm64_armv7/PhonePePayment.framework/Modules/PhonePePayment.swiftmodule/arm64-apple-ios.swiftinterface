// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PhonePePayment
import CommonCrypto
import Foundation
@_exported import PhonePePayment
import Swift
import UIKit
@objc public enum Environment : Swift.Int {
  case stage
  case uat
  case production
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class DPSTransactionRequest : ObjectiveC.NSObject {
  public init(body: Swift.String, apiEndPoint: Swift.String, checksum: Swift.String, headers: [Swift.String : Swift.String]?, callBackURL: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
public protocol PhonePeErrorProtocol : Swift.Error {
  var code: Swift.String { get }
  var localizedDescription: Swift.String { get }
}
public enum TransactionInterruptedError : PhonePePayment.PhonePeErrorProtocol {
  case appReOpenedWithoutTransactionDetail
  public var code: Swift.String {
    get
  }
  public var localizedDescription: Swift.String {
    get
  }
  public static func == (a: PhonePePayment.TransactionInterruptedError, b: PhonePePayment.TransactionInterruptedError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum TransactionFailureError : PhonePePayment.PhonePeErrorProtocol {
  case requestFailure(message: Swift.String)
  case networkFailure(message: Swift.String)
  case serverError(message: Swift.String)
  case failedRedirection
  case transactionFailure
  case webFlowFailure(message: Swift.String)
  public var code: Swift.String {
    get
  }
  public var localizedDescription: Swift.String {
    get
  }
}
public enum PPResultState {
  case success
  case failure(_: PhonePePayment.PhonePeErrorProtocol)
  case interrupted(_: PhonePePayment.PhonePeErrorProtocol)
}
@_hasMissingDesignatedInitializers @objc final public class AnalyticsManager : ObjectiveC.NSObject {
  public static var shared: PhonePePayment.AnalyticsManager? {
    get
  }
  public static func setup()
  final public func configureViaTransactionRequest(_ request: PhonePePayment.DPSTransactionRequest)
  @objc override dynamic public init()
  @objc deinit
}
public typealias DPSTransactionCompletion = (PhonePePayment.DPSTransactionRequest, PhonePePayment.PPResultState) -> Swift.Void
@_inheritsConvenienceInitializers @objc public class PhonePeDPSDK : ObjectiveC.NSObject {
  public static var enableDebugLogs: Swift.Bool {
    get
    set
  }
  public static var version: Swift.String?
  public init(environment: PhonePePayment.Environment = .production, enableLogging: Swift.Bool? = nil)
  @objc convenience override dynamic public init()
  public static func getPackageSignature() -> Swift.String
  public static func isPhonePeInstalled() -> Swift.Bool
  public static func isPaytmAppPresent() -> Swift.Bool
  public static func isGPayAppPresent() -> Swift.Bool
  public static func checkDeeplink(_ url: Foundation.URL) -> Swift.Bool
  public func startPhonePeTransactionRequest(transactionRequest request: PhonePePayment.DPSTransactionRequest, on viewController: UIKit.UIViewController, animated: Swift.Bool, completion: @escaping PhonePePayment.DPSTransactionCompletion)
  @objc deinit
}
extension PhonePePayment.Environment : Swift.Equatable {}
extension PhonePePayment.Environment : Swift.Hashable {}
extension PhonePePayment.Environment : Swift.RawRepresentable {}
extension PhonePePayment.TransactionInterruptedError : Swift.Equatable {}
extension PhonePePayment.TransactionInterruptedError : Swift.Hashable {}
